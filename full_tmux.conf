
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c '#{pane_current_path}'

bind ^s split-window -v -c "#{pane_current_path}"
bind ^v split-window -h -c "#{pane_current_path}"

# open panes in same path when using canonical tmux splits
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Provide command to generate a 2:1 ratio layout
bind @ \
  split-window -h -c "#{pane_current_path}" -p 33 \;\
  select-pane -L \;\

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind ^h select-pane -L
bind ^j select-pane -D
bind ^k select-pane -U
bind ^l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r < resize-pane -L 10
bind -r > resize-pane -R 10
bind -r - resize-pane -D 10
bind -r + resize-pane -U 10
bind = select-layout tiled

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# Confirm before changing your bespoke layout to zebra stripes
bind Space confirm next-layout

# session management
bind C new-session
bind L choose-session

# vi-style controls for copy mode
setw -g mode-keys vi

# Set the prefix to ^A, like screen
unbind C-b
set -g prefix ^A
bind a send-prefix

# Start numbering windows at 1
set -g base-index 1

# Renumber tmux windows
bind-key R move-window -r

bind ^a last-window # toggle last window like screen

set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION"

bind K confirm kill-server
bind X confirm kill-window

# Put a pane into Buffer mode, where a buffer may be chosen from a list.
# History of selections copied in Copy mode accumulate in paste buffers
# and after using this bind you can:
#
# - Move up and down in the list
# - Search the list
# - Enter to paste the buffer into active pane
# - t, to tag or untag a buffer
# - T, untag all buffers
# - P, paste all tagged buffers
#
# and more detailed in `man tmux`

bind P choose-buffer -Z

# avoid lag when pressing `esc` in vim
# https://stackoverflow.com/a/33812578
set -s escape-time 0

# longer scrollback
set -g history-limit 10000

set -g status-interval 1
if-shell "tmux -V | awk '{exit ($2 < 2.9) ? 0 : 1}'" \
  'set -g status-bg default ;\
   set -g status-fg white'
if-shell "tmux -V | awk '{exit ($2 >= 2.9) ? 0 : 1}'" \
  'set -g status-style bg=terminal,fg=white'

# Notify clients on focus
set -g focus-events on

# left side of status bar holds "(>- session name -<)"
set -g status-left-length 100
set -g status-left ''
if-shell "tmux -V | awk '{exit ($2 < 2.9) ? 0 : 1}'" \
  'set -g status-left-bg green ;\
  set -g status-left-fg black ;\
  set -g status-left-attr bold'
if-shell "tmux -V | awk '{exit ($2 >= 2.9) ? 0 : 1}'" \
  'set -g status-left-style bg=green,fg=black,bold'

# right side of status bar holds "[host name] (date time)"
set -g status-right-length 100
set -g status-right '#[fg=colour214,bg=colour235] #H#[fg=colour238]:#[fg=colour178]#S #[fg=colour039,bg=colour238] %y.%m.%d %H:%M '
if-shell "tmux -V | awk '{exit ($2 < 2.9) ? 0 : 1}'" \
  'set -g status-right-fg black ;\
  set -g status-right-attr bold'
if-shell "tmux -V | awk '{exit ($2 >= 2.9) ? 0 : 1}'" \
  'set -g status-right-style fg=black,bold'

# make background window look like white tab
set-window-option -g window-status-format '#[fg=colour214,bg=colour235] #I #[fg=white,bg=colour236] #{?window_zoomed_flag,#[fg=colour44](,}#W#{?window_zoomed_flag,#[fg=colour44]),} #{?pane_synchronized,#[fg=brightred](sync) ,}#[default]'
if-shell "tmux -V | awk '{exit ($2 < 2.9) ? 0 : 1}'" \
  'set-window-option -g window-status-bg default ;\
  set-window-option -g window-status-fg white ;\
  set-window-option -g window-status-attr none'
if-shell "tmux -V | awk '{exit ($2 >= 2.9) ? 0 : 1}'" \
  'set-window-option -g window-status-style bg=default,fg=white,none'

# make foreground window look like bold yellow foreground tab
set-window-option -g window-status-current-format '#[fg=black,bg=colour214] #I #[fg=brightwhite,bg=colour238] #{?window_zoomed_flag,#[fg=colour44](,}#W#{?window_zoomed_flag,#[fg=colour44]),} #{?pane_synchronized,#[fg=brightred](sync) ,}#[default]'
if-shell "tmux -V | awk '{exit ($2 < 2.9) ? 0 : 1}'" \
  'set-window-option -g window-status-current-attr none'
if-shell "tmux -V | awk '{exit ($2 >= 2.9) ? 0 : 1}'" \
  'set-window-option -g window-status-current-style none'

# active terminal yellow border, non-active white
if-shell "tmux -V | awk '{exit ($2 < 2.9) ? 0 : 1}'" \
  'set -g pane-border-bg default ;\
  set -g pane-border-fg colour238 ;\
  set -g pane-active-border-bg default ;\
  set -g pane-active-border-fg colour214'
if-shell "tmux -V | awk '{exit ($2 >= 2.9) ? 0 : 1}'" \
  'set -g pane-border-style bg=default,fg=colour238 ;\
  set -g pane-active-border-style bg=default,fg=colour214'

# set a 256color $TERM variable so programs inside tmux know they can use 256 colors
set -g default-terminal screen-256color
# reverted the following until all deployed instances have the lastest terminfo
if-shell 'infocmp tmux-256color >/dev/null 2>&1' \
  "set -g default-terminal tmux-256color" \
  "set -g default-terminal screen-256color"

set -as terminal-overrides ',xterm*:sitm=\E[3m'

# disable mouse mode by default
if-shell "tmux -V | awk '{exit ($2 > 2.0) ? 0 : 1}'" \
  'set -g mouse off'
if-shell "tmux -V | awk '{exit ($2 < 2.1) ? 0 : 1}'" \
  'set -g mode-mouse off ;\
  set -g mouse-resize-pane off ;\
  set -g mouse-select-pane off ;\
  set -g mouse-select-window off'

# Toggle mouse on with m
if-shell "tmux -V | awk '{exit ($2 < 2.1) ? 0 : 1}'" \
  "bind m \
    set -g mode-mouse on \\;\
    set -g mouse-resize-pane on \\;\
    set -g mouse-select-pane on \\;\
    set -g mouse-select-window on \\;\
    display 'Mouse: ON'"

if-shell "tmux -V | awk '{exit ($2 > 2.0) ? 0 : 1}'" \
  "bind m \ set -g mouse on \\;\
    display 'Mouse: ON'"

# Toggle mouse off with M
if-shell "tmux -V | awk '{exit ($2 < 2.1) ? 0 : 1}'" \
  "bind M \
    set -g mode-mouse off \\;\
    set -g mouse-resize-pane off \\;\
    set -g mouse-select-pane off \\;\
    set -g mouse-select-window off \\;\
    display 'Mouse: OFF'"

if-shell "tmux -V | awk '{exit ($2 > 2.0) ? 0 : 1}'" \
  "bind M \
    set -g mouse off \\;\
    display 'Mouse: OFF'"

# reload tmux config file with C-a r
if-shell "echo $CPAIR | awk '{exit ((length($1)) != 0 || ($1 == 1) ? 0 : 1)}'" \
    "bind r source '/etc/tmux.conf'" \
    "bind r source '~/.tmux.conf'"

# Create a new window and prompt for name
bind N command-prompt "new-window -n '%%' -c '#{pane_current_path}'"
bind c new-window -c '#{pane_current_path}'

# Rebind prefix to b
bind B confirm-before -p "Change prefix to C-b?" 'set -g prefix ^b'
bind A confirm-before -p "Change prefix to C-a?" 'set -g prefix ^a'

# Save tmux history - http://unix.stackexchange.com/questions/26548/write-all-tmux-scrollback-to-a-file
bind-key S command-prompt -p 'save history to filename:' -I '/tmp/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# Source extra cpair vim config if it exists
# if-shell "test -f /etc/tmux_cpair.conf" "source /etc/tmux_cpair.conf"

# Use | and - to split a window vertically and horizontally instead of " and % respoectively
# unbind '"'
# unbind %
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind e select-layout even-horizontal
bind E select-layout even-vertical

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

set -g @plugin 'cosmicbuffalo/tpm'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'jimeh/tmuxifier'
set -g @plugin 'tmux-plugins/tmux-yank'

# run '~/.tmux/plugins/tpm/tpm'

set -g @yank_action 'copy-pipe-no-clear'

set-option -g set-clipboard on
set-option -sa terminal-overrides ',*:clipboard:external'

set -g mouse on
set-option -g mouse on

# set vi-mode
set-window-option -g mode-keys vi

# let option keys work in tmux
setw -g xterm-keys on

# put the status bar on top
set -g status-position top

set -g default-terminal "xterm-256color"

bar_default="#1a1a19"
tab_default="#2d2d30"
tab_in_between="#3a3a3a"
tab_current="#4e4e4e"
blue="#5eaceb"
black="#000000"
purple="#c785c0"
green="#6a9955"
orange="#ff8800"
white="#ffffff"
copy_color="#1b2817"

# Set active pane border color
set-option -g pane-active-border-style fg=$green
# Set inactive pane border color
set-option -g pane-border-style fg=$tab_default
# setw -g pane-border-lines single

# Message info
set-option -g message-style bg=$tab_default,fg=white # bg=bg2, fg=fg1

# Writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# Pane number display
set-option -g display-panes-active-colour $orange
set-option -g display-panes-colour $blue

set -g mode-style "bg=$copy_color"

set-window-option -g window-status-bell-style bg=$orange,fg=colour235 # bg=red, fg=bg


set -g status-right-length 100
set -g status-left-length 100

set-option -g status-style bg=$black

set-option -g status-left "\
#[bg=$tab_default]#{?client_prefix,#[bg=$orange],#{?pane_in_mode,#[bg=$green],}} \
#[fg=$tab_default, bg=$black]#{?client_prefix,#[fg=$orange],#{?pane_in_mode,#[fg=$green],}}"

set-option -g status-right "\
#{?window_zoomed_flag,#[fg=$white#,bg=$black#,bold#,italics]#[bg=$white#,fg=$black#,bold#,italics] Z #[nobold#,noitalics]#[bg=$white],}\
#{?pane_in_mode,#[fg=$green]#[bg=$green]#[fg=$black] #{pane_mode} #[bg=$green],}\
#[fg=$bar_default]#[bg=$bar_default] \
#(/usr/local/bin/bt-show-tmux-access)#[bg=$bar_default]\
#[fg=$bar_default]\
#[fg=$blue, bg=$bar_default] #S #[fg=$tab_default]\
#[fg=white,bg=$tab_default] #{s|/home/admin/|~/|:pane_current_path} #[fg=$tab_in_between]\
#[fg=white,bg=$tab_in_between] #{pane_current_command} #[fg=$tab_current]#[fg=white,bg=$tab_current] %a %H:%M %m-%d-%Y #[fg=$blue]\
#[fg=$black, bg=$blue, bold] #H #[fg=$black, bg=$blue]\
#[bg=$black, fg=$tab_default]#{?client_prefix,#[fg=$orange],#{?pane_in_mode,#[fg=$green],}}#[bg=$tab_default]#{?pane_in_mode,#[bg=$green],}#{?client_prefix,#[bg=$orange],} "


set-window-option -g window-status-format "\
#[fg=$black, bg=$tab_default]\
#[fg=$blue, bg=$tab_default] #W \
#[fg=$tab_default, bg=$blue]\
#[fg=$tab_default, bg=$blue] #I \
#[fg=$blue, bg=$black]"

set-window-option -g window-status-current-format "\
#[fg=$black, bg=$tab_current]\
#[fg=white, bg=$tab_current] #W \
#[fg=$tab_current, bg=$orange, nobold]\
#[fg=$black, bg=$orange] #I \
#[fg=$orange, bg=$black, nobold]"



# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# override default resurrect bindings to avoid conflict with existing shortcut
set -g @resurrect-save 'Z'
set -g @resurrect-restore 'R'

## PERSONAL TMUX CONFIG
# to add custom tmux configuration, put it here in your cpair setup script
# If you run into issues with the path, try putting your file at
# `/home/<username>/.tmux_personal.conf` instead of `/home/admin/.tmux_personal.conf`
# NOTE: personal tmux config won't be loaded until after hitting the <prefix>r command to reload config
# if-shell "test -f ~/.tmux_personal.conf" "source ~/.tmux_personal.conf"

# Use | and - to split a window vertically and horizontally instead of " and % respoectively
# unbind '"'
# unbind %
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind e select-layout even-horizontal
bind E select-layout even-vertical

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'jimeh/tmuxifier'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.tmux/plugins/tpm/tpm'

set -g @yank_action 'copy-pipe-no-clear'

set -g mouse on
set-option -g mouse on

# set vi-mode
set-window-option -g mode-keys vi

# let option keys work in tmux
setw -g xterm-keys on

# put the status bar on top
set -g status-position top

set -g default-terminal "xterm-256color"

bar_default="#1a1a19"
tab_default="#2d2d30"
tab_in_between="#3a3a3a"
tab_current="#4e4e4e"
blue="#5eaceb"
black="#000000"
purple="#c785c0"
green="#6a9955"
orange="#ff8800"
white="#ffffff"
copy_color="#1b2817"

# Set active pane border color
set-option -g pane-active-border-style fg=$green
# Set inactive pane border color
set-option -g pane-border-style fg=$tab_default
# setw -g pane-border-lines single

# Message info
set-option -g message-style bg=$tab_default,fg=white # bg=bg2, fg=fg1

# Writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# Pane number display
set-option -g display-panes-active-colour $orange
set-option -g display-panes-colour $blue

set -g mode-style "bg=$copy_color"

set-window-option -g window-status-bell-style bg=$orange,fg=colour235 # bg=red, fg=bg


set -g status-right-length 100
set -g status-left-length 100

set-option -g status-style bg=$black

set-option -g status-left "\
#[bg=$tab_default]#{?client_prefix,#[bg=$orange],#{?pane_in_mode,#[bg=$green],}} \
#[fg=$tab_default, bg=$black]#{?client_prefix,#[fg=$orange],#{?pane_in_mode,#[fg=$green],}}"

set-option -g status-right "\
#{?window_zoomed_flag,#[fg=$white#,bg=$black#,bold#,italics]#[bg=$white#,fg=$black#,bold#,italics] Z #[nobold#,noitalics]#[bg=$white],}\
#{?pane_in_mode,#[fg=$green]#[bg=$green]#[fg=$black] #{pane_mode} #[bg=$green],}\
#[fg=$bar_default]#[bg=$bar_default] \
#(/usr/local/bin/bt-show-tmux-access)#[bg=$bar_default]\
#[fg=$bar_default]\
#[fg=$blue, bg=$bar_default] #S #[fg=$tab_default]\
#[fg=white,bg=$tab_default] #{s|/home/admin/|~/|:pane_current_path} #[fg=$tab_in_between]\
#[fg=white,bg=$tab_in_between] #{pane_current_command} #[fg=$tab_current]#[fg=white,bg=$tab_current] %a %H:%M %m-%d-%Y #[fg=$blue]\
#[fg=$black, bg=$blue, bold] #H #[fg=$black, bg=$blue]\
#[bg=$black, fg=$tab_default]#{?client_prefix,#[fg=$orange],#{?pane_in_mode,#[fg=$green],}}#[bg=$tab_default]#{?pane_in_mode,#[bg=$green],}#{?client_prefix,#[bg=$orange],} "


set-window-option -g window-status-format "\
#[fg=$black, bg=$tab_default]\
#[fg=$blue, bg=$tab_default] #W \
#[fg=$tab_default, bg=$blue]\
#[fg=$tab_default, bg=$blue] #I \
#[fg=$blue, bg=$black]"

set-window-option -g window-status-current-format "\
#[fg=$black, bg=$tab_current]\
#[fg=white, bg=$tab_current] #W \
#[fg=$tab_current, bg=$orange, nobold]\
#[fg=$black, bg=$orange] #I \
#[fg=$orange, bg=$black, nobold]"





# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if-shell "echo $CPAIR | awk '{exit ((length($1)) != 0 || ($1 == 1) ? 0 : 1)}'" \
    "run '/home/admin/.tmux/plugins/tpm/tpm'" \
    "run '~/.tmux/plugins/tpm/tpm'"

# Fix copy/paste on MacOS: https://thoughtbot.com/blog/how-to-copy-and-paste-with-tmux-on-mac-os-x
if-shell "test -f /usr/local/bin/reattach-to-user-namespace" 'set-option -g default-command "reattach-to-user-namespace -l zsh"'
